version "3.7"

#include "actors/fancy_base.zsc"
#include "actors/fancy_floors.zsc"
#include "actors/fancy_ceilings.zsc"
#include "actors/fancy_walls.zsc"

Class SpawnEnvActorHandler : EventHandler
{
	// In the interests of neatness, make each piece of the puzzle a different
	// function that can be easily commented out for debugging's sake
	override void WorldLoaded(WorldEvent e)
	{
		SpawnFloorActors();
		SpawnFloorActors_OldWay();
		SpawnCeilingActors();
		SpawnSkyActors();
		SpawnWallActors();
		ChangeSoundSequences();
	}
	
	// Spawn Stuff on the floor in a "grid" across all playable map space.
	// Thanks to Gutawer, PhantomBeta and _Bryan for helping debug this!
	void SpawnFloorActors()
    {
        string FloorTex[] =
		{
			"NUKAGE1", "NUKAGE2", "NUKAGE3", "NUKAGE4", 
			"FWATER1", "FWATER2", "FWATER3", "FWATER4", "PURW1", "PURW2", 
			"SLIME01", "SLIME02", "SLIME03", "SLIME04", "SLIME05", "SLIME06", "SLIME07", "SLIME08", "SLUDGE01", "SLUDGE02", "SLUDGE03", "SLUDGE04", "OSLIME01", "OSLIME02", 
			"LAVA1", "LAVA2", "LAVA3", "LAVA4", "QLAVA1", "QLAVA2", "QLAVA3", "QLAVA4", "MAGMA1", "MAGMA2", "MAGMA3", "MAGMA4", "XLAV1", "XLAV2", 
			"BLOOD1", "BLOOD2", "BLOOD3", "BLOOD4", 
			"SLIME09", "SLIME10", "SLIME11", "SLIME12", 
			"XWATER1", "XWATER2", "XWATER3", "XWATER4"
		};

		string FloorFX[] =
		{
			"Nukage", "Nukage", "Nukage", "Nukage", 
			"Water", "Water", "Water", "Water", "Water", "Water", 
			"Slime", "Slime", "Slime", "Slime", "Slime", "Slime", "Slime", "Slime", "Slime", "Slime", "Slime", "Slime", "Slime", "Slime", 
			"Lava", "Lava", "Lava", "Lava", "Lava", "Lava", "Lava", "Lava", "Lava", "Lava", "Lava", "Lava", "Lava", "Lava", 
			"Blood", "Blood", "Blood", "Blood", 
			"Hot", "Hot", "Hot", "Hot", 
			"XWater", "XWater", "XWater", "XWater"
		};
		
		//32704
		int spamx = -32448;
		int spamy = 32448;
		int spamz = 0;

		Vector2 spam2 = (spamx, spamy);
		Vector3 spam3 = (spamx, spamy, spamz);
		
		bool nospawn;

		while (spamy > -32448)
		{
			while (spamx < 32448)
			{
				spamz = Sector.pointInSector((spamx, spamy)).floorplane.zAtPoint((spamx, spamy));
				if (level.IsPointInMap(spam3))
				{
					//Actor.Spawn("FancyEnvActorFloor", (spamx, spamy, spamz));
					
					string floorpic;
					floorpic = TexMan.GetName(Sector.pointInSector((spamx, spamy)).getTexture(Sector.floor));
					
					for (int i = 0; i < FloorTex.Size(); i++)
					{
						if (floorpic == FloorTex[i])
						{
							string actname;
							actname = String.Format("FancySector%s", FloorFX[i]);
							//Console.printf("%s", actname);
							
							BlockThingsIterator it = BlockThingsIterator.CreateFromPos(spamx, spamy, spamz, spamz, 128, 0);
							while (it.Next())
							{
								Actor mo = it.thing;
								
								if (mo is "FancyWorldBase")
								{
									nospawn = true;
								}
							}
							
							if (!nospawn)
							{
								Actor.Spawn(actname, (spamx, spamy, spamz));
							}
							
							nospawn = false;
						}
					}
				}
				spamx += 64;
				spam3 = (spamx, spamy, spamz);
			}
			spamx = -32448;
			spamy -= 128;
		}
    }
	
	// Spawn stuff on the floor the "old way" (in the center of every sector,
	// regardless of whether that center is actually in the sector or not.
	// only useful for things that are very likely gonna be a square.
	// Devised by Gutawer!
	void SpawnFloorActors_OldWay()
	{
		string FloorTex[] =
		{
			"GATE1", "GATE2", "GATE3", "GATE4", "GATE3TN", "GATE4BL", "GATE4GN", "GATE4OR", "GATE4RD", "GATE4YL",
			"FAN1", "FAN2", "FAN3", "FAN4"
		};

		string FloorFX[] =
		{
			"Teleporter", "Teleporter", "Teleporter", "Teleporter", "Teleporter", "Teleporter", "Teleporter", "Teleporter", "Teleporter", "Teleporter",
			"Fan", "Fan", "Fan", "Fan"
		};
		
		for (int i = 0; i < level.Sectors.Size(); i++)
		{
			let c = level.Sectors[i].centerspot;
			//Actor.Spawn("FancyEnvActorFloorOldWay", (c.x, c.y, level.Sectors[i].floorplane.ZAtPoint(c)));
			
			if (level.IsPointInMap((c.x, c.y, level.Sectors[i].floorplane.ZAtPoint(c))))
			{
				string floorpic;
				floorpic = TexMan.GetName(level.Sectors[i].getTexture(Sector.floor));
				
				for (int i = 0; i < FloorTex.Size(); i++)
				{
					if (floorpic == FloorTex[i])
					{
						string actname;
						actname = String.Format("FancySector%s", FloorFX[i]);
						Actor.Spawn(actname, (c.x, c.y, level.Sectors[i].floorplane.ZAtPoint(c)));
					}
				}
			}
		}
	}

	// Spawn Stuff on the ceiling. Same method as with SpawnFloorActors.
	void SpawnCeilingActors()
    {
        //32704
		int spamx = -32448;
		int spamy = 32448;
		int spamz = 0;

		Vector2 spam2 = (spamx, spamy);
		Vector3 spam3 = (spamx, spamy, spamz);

		while (spamy > -32448)
		{
			while (spamx < 32448)
			{
				spamz = Sector.pointInSector((spamx, spamy)).floorplane.zAtPoint((spamx, spamy));
				if (level.IsPointInMap(spam3))
				{
					Actor.Spawn("FancyEnvActorCeiling", (spamx, spamy, spamz));
				}
				spamx += 256;
				spam3 = (spamx, spamy, spamz);
			}
			spamx = -32448;
			spamy -= 256;
		}
    }
	
	// Spawn Stuff on the ceiling. Same method as with SpawnFloorActors, just at
	// a larger grid size for the sake of performance.
	void SpawnSkyActors()
    {
        //32704
		int spamx = -32448;
		int spamy = 32448;
		int spamz = 0;

		Vector2 spam2 = (spamx, spamy);
		Vector3 spam3 = (spamx, spamy, spamz);
		
		int skipsky = 0;

		while (spamy > -32448)
		{
			while (spamx < 32448)
			{
				spamz = Sector.pointInSector((spamx, spamy)).floorplane.zAtPoint((spamx, spamy));
				if (level.IsPointInMap(spam3))
				{
					Actor.Spawn("FancyEnvActorSky", (spamx, spamy, spamz));
					spamx += 1024;
				} else {
					spamx += 256;
				}
				spam3 = (spamx, spamy, spamz);
			}
			spamx = -32448;
			spamy -= 1024;
		}
    }

	// Spawn stuff on walls. Specifically, in the middle of appropriate linedefs.
	// Thanks Nash and Phantombeta!
	void SpawnWallActors()
	{
		for (int i = 0; i < level.Lines.Size(); i++)
		{
			Line l = level.Lines[i];
			int spamf = 0;
			int spamc = 0;

			// do front first, then back
			for (int ii = 0; ii < 2; ii++)
			{
				double lineLen = l.delta.Length ();
				Vector2 spawnCoords = level.Vec2Offset (l.v1.p, l.delta.Unit () * (lineLen * 0.5));
				spamc = Sector.pointInSector(spawnCoords).ceilingplane.zAtPoint(spawnCoords);
				spamf = Sector.pointInSector(spawnCoords).floorplane.zAtPoint(spawnCoords);

				/*
				if (l.sidedef[ii] && l.sidedef[ii].GetTexture(Side.top) == TexMan.CheckForTexture("PLANET1", TexMan.Type_Any))
				Actor.Spawn("FancyWallTestSound", (spawnCoords,(spamc - 32)));

				if (l.sidedef[ii] && l.sidedef[ii].GetTexture(Side.mid) == TexMan.CheckForTexture("COMPUTE2", TexMan.Type_Any))
				Actor.Spawn("FancyWallTestSound", (spawnCoords,(spamc - (spamf * 0.5))));

				if (l.sidedef[ii] && l.sidedef[ii].GetTexture(Side.bottom) == TexMan.CheckForTexture("STEP6", TexMan.Type_Any))
				Actor.Spawn("FancyWallTestSound", (spawnCoords,spamf));
				*/

				// Plutonia Waterfall
				string WallWaterfall[] =
				{
					"WFALL1",
					"WFALL2",
					"WFALL3",
					"WFALL4",
					// for WADSMOOSH
					"PWFALL1",
					"PWFALL2",
					"PWFALL3",
					"PWFALL4"
				};

				for (int i = 0; i < WallWaterfall.Size(); i++)
				{
					if (l.sidedef[ii] && l.sidedef[ii].GetTexture(Side.top) == TexMan.CheckForTexture(WallWaterfall[i], TexMan.Type_Any))
					Actor.Spawn("FancyWallWaterfall", (spawnCoords,(spamc - 32)));
					if (l.sidedef[ii] && l.sidedef[ii].GetTexture(Side.mid) == TexMan.CheckForTexture(WallWaterfall[i], TexMan.Type_Any))
					Actor.Spawn("FancyWallWaterfall", (spawnCoords,(spamc - (spamf * 0.5))));
					if (l.sidedef[ii] && l.sidedef[ii].GetTexture(Side.bottom) == TexMan.CheckForTexture(WallWaterfall[i], TexMan.Type_Any))
					Actor.Spawn("FancyWallWaterfall", (spawnCoords,spamf));
				}

				// Bloodfall
				string WallBloodfall[] =
				{
					"BFALL1",
					"BFALL2",
					"BFALL3",
					"BFALL4",
					// Obsidian
					"BFAL1",
					"BFAL2",
					"BFAL3",
					"BFAL4"
				};

				for (int i = 0; i < WallBloodfall.Size(); i++)
				{
					if (l.sidedef[ii] && l.sidedef[ii].GetTexture(Side.top) == TexMan.CheckForTexture(WallBloodfall[i], TexMan.Type_Any))
					Actor.Spawn("FancyWallBloodfall", (spawnCoords,(spamc - 32)));
					if (l.sidedef[ii] && l.sidedef[ii].GetTexture(Side.mid) == TexMan.CheckForTexture(WallBloodfall[i], TexMan.Type_Any))
					Actor.Spawn("FancyWallBloodfall", (spawnCoords,(spamc - (spamf * 0.5))));
					if (l.sidedef[ii] && l.sidedef[ii].GetTexture(Side.bottom) == TexMan.CheckForTexture(WallBloodfall[i], TexMan.Type_Any))
					Actor.Spawn("FancyWallBloodfall", (spawnCoords,spamf));
				}

				// Doom 2 Slimefall
				string WallSlimefall[] =
				{
					"SFALL1",
					"SFALL2",
					"SFALL3",
					"SFALL4",
					// OBSIDIAN
					"GREEN02",
					"GRYFALL1",
					"GRYFALL2",
					"GRYFALL3",
					"GRYFALL4",
					"OFALL1",
					"OFALL2",
					"OFALL3",
					"OFALL4",
					"SLMFALL1",
					"SLMFALL2",
					"SLMFALL3",
					"SLMFALL4",
					"PURFAL1",
					"PURFAL2",
					"PURFAL3",
					"PURFAL4"
				};

				for (int i = 0; i < WallSlimefall.Size(); i++)
				{
					if (l.sidedef[ii] && l.sidedef[ii].GetTexture(Side.top) == TexMan.CheckForTexture(WallSlimefall[i], TexMan.Type_Any))
					Actor.Spawn("FancyWallSlimefall", (spawnCoords,(spamc - 32)));
					if (l.sidedef[ii] && l.sidedef[ii].GetTexture(Side.mid) == TexMan.CheckForTexture(WallSlimefall[i], TexMan.Type_Any))
					Actor.Spawn("FancyWallSlimefall", (spawnCoords,(spamc - (spamf * 0.5))));
					if (l.sidedef[ii] && l.sidedef[ii].GetTexture(Side.bottom) == TexMan.CheckForTexture(WallSlimefall[i], TexMan.Type_Any))
					Actor.Spawn("FancyWallSlimefall", (spawnCoords,spamf));
				}

				// Lavafalls
				string WallLavafall[] =
				{
					// OBSIDIAN Lavafall. Probably other lavafalls, too...
					"LFALL1",
					"LFALL2",
					"LFALL3",
					"LFALL4",
					"LFAL21",
					"LFAL22",
					"LFAL23",
					"LFAL24",
					// CC4 Tex
					"LAVFALL1",
					"LAVFALL2",
					"LAVFALL3",
					"LAVFALL4",
					// Obsidian
					"LFALL1",
					"LFALL2",
					"LFALL3",
					"LFALL4",
					"LFAL21",
					"LFAL22",
					"LFAL23",
					"LFAL24",
					"MFALL1",
					"MFALL2",
					"MFALL3",
					"MFALL4"
				};

				for (int i = 0; i < WallLavafall.Size(); i++)
				{
					if (l.sidedef[ii] && l.sidedef[ii].GetTexture(Side.top) == TexMan.CheckForTexture(WallLavafall[i], TexMan.Type_Any))
					Actor.Spawn("FancyWallLavafall", (spawnCoords,(spamc - 32)));
					if (l.sidedef[ii] && l.sidedef[ii].GetTexture(Side.mid) == TexMan.CheckForTexture(WallLavafall[i], TexMan.Type_Any))
					Actor.Spawn("FancyWallLavafall", (spawnCoords,(spamc - (spamf * 0.5))));
					if (l.sidedef[ii] && l.sidedef[ii].GetTexture(Side.bottom) == TexMan.CheckForTexture(WallLavafall[i], TexMan.Type_Any))
					Actor.Spawn("FancyWallLavafall", (spawnCoords,spamf));
				}


				// Doom 1 Slimedrip
				string WallSlimedrip[] =
				{
					"SLADRIP1",
					"SLADRIP2",
					"SLADRIP3"
				};

				for (int i = 0; i < WallSlimedrip.Size(); i++)
				{
					if (l.sidedef[ii] && l.sidedef[ii].GetTexture(Side.top) == TexMan.CheckForTexture(WallSlimedrip[i], TexMan.Type_Any))
					Actor.Spawn("FancyWallSlimedrip", (spawnCoords,(spamc - 32)));
					if (l.sidedef[ii] && l.sidedef[ii].GetTexture(Side.mid) == TexMan.CheckForTexture(WallSlimedrip[i], TexMan.Type_Any))
					Actor.Spawn("FancyWallSlimedrip", (spawnCoords,(spamc - (spamf * 0.5))));
					if (l.sidedef[ii] && l.sidedef[ii].GetTexture(Side.bottom) == TexMan.CheckForTexture(WallSlimedrip[i], TexMan.Type_Any))
					Actor.Spawn("FancyWallSlimedrip", (spawnCoords,spamf));
				}

				// Gargoyle Blood Fountain
				string WallGargfont[] =
				{
					"GSTFONT1",
					"GSTFONT2",
					"GSTFONT3"
				};

				for (int i = 0; i < WallGargfont.Size(); i++)
				{
					if (l.sidedef[ii] && l.sidedef[ii].GetTexture(Side.top) == TexMan.CheckForTexture(WallGargfont[i], TexMan.Type_Any))
					Actor.Spawn("FancyWallGargfont", (spawnCoords,(spamc - 32)));
					if (l.sidedef[ii] && l.sidedef[ii].GetTexture(Side.mid) == TexMan.CheckForTexture(WallGargfont[i], TexMan.Type_Any))
					Actor.Spawn("FancyWallGargfont", (spawnCoords,(spamc - (spamf * 0.5))));
					if (l.sidedef[ii] && l.sidedef[ii].GetTexture(Side.bottom) == TexMan.CheckForTexture(WallGargfont[i], TexMan.Type_Any))
					Actor.Spawn("FancyWallGargfont", (spawnCoords,spamf));
				}

				// Compstation
				string WallCompstation[] =
				{
					"COMPSTA1",
					"COMPSTA2",
					// CC4 Tex
					"COMPSTA3",
					"COMPSTA4",
					"COMPSTA5",
					"COMPSTA6",
					"COMPTALR",
					// OBSIDIAN
					"COMPSTA7",
					"COMPSTA8",
					"COMPSTA9",
					"COMPSTAA",
					"COMPSTAB"
				};

				for (int i = 0; i < WallCompstation.Size(); i++)
				{
					if (l.sidedef[ii] && l.sidedef[ii].GetTexture(Side.top) == TexMan.CheckForTexture(WallCompstation[i], TexMan.Type_Any))
					Actor.Spawn("FancyWallCompstation", (spawnCoords,(spamc - 32)));
					if (l.sidedef[ii] && l.sidedef[ii].GetTexture(Side.mid) == TexMan.CheckForTexture(WallCompstation[i], TexMan.Type_Any))
					Actor.Spawn("FancyWallCompstation", (spawnCoords,(spamc - (spamf * 0.5))));
					if (l.sidedef[ii] && l.sidedef[ii].GetTexture(Side.bottom) == TexMan.CheckForTexture(WallCompstation[i], TexMan.Type_Any))
					Actor.Spawn("FancyWallCompstation", (spawnCoords,spamf));
				};

				// Fireblu
				string WallFireblu[] =
				{
					"FIREBLU1",
					"FIREBLU2"
				};

				for (int i = 0; i < WallFireblu.Size(); i++)
				{
					if (l.sidedef[ii] && l.sidedef[ii].GetTexture(Side.top) == TexMan.CheckForTexture(WallFireblu[i], TexMan.Type_Any))
					Actor.Spawn("FancyWallFireblu", (spawnCoords,(spamc - 32)));
					if (l.sidedef[ii] && l.sidedef[ii].GetTexture(Side.mid) == TexMan.CheckForTexture(WallFireblu[i], TexMan.Type_Any))
					Actor.Spawn("FancyWallFireblu", (spawnCoords,(spamc - (spamf * 0.5))));
					if (l.sidedef[ii] && l.sidedef[ii].GetTexture(Side.bottom) == TexMan.CheckForTexture(WallFireblu[i], TexMan.Type_Any))
					Actor.Spawn("FancyWallFireblu", (spawnCoords,spamf));
				}

				// Firey Walls
				string WallFirewall[] =
				{
					"FIREMAG1",
					"FIREMAG2",
					"FIREMAG3",
					"FIREWALL",
					"FIREWALA",
					"FIREWALB",
					"FIRELAVA",
					"FIRELAV2",
					"FIRELAV3"
				};

				for (int i = 0; i < WallFirewall.Size(); i++)
				{
					if (l.sidedef[ii] && l.sidedef[ii].GetTexture(Side.top) == TexMan.CheckForTexture(WallFirewall[i], TexMan.Type_Any))
					Actor.Spawn("FancyWallFirewall", (spawnCoords,(spamc - 32)));
					if (l.sidedef[ii] && l.sidedef[ii].GetTexture(Side.mid) == TexMan.CheckForTexture(WallFirewall[i], TexMan.Type_Any))
					Actor.Spawn("FancyWallFirewall", (spawnCoords,(spamc - (spamf * 0.5))));
					if (l.sidedef[ii] && l.sidedef[ii].GetTexture(Side.bottom) == TexMan.CheckForTexture(WallFirewall[i], TexMan.Type_Any))
					Actor.Spawn("FancyWallFirewall", (spawnCoords,spamf));
				}

				// Generic Hummy Tech
				string WallTechhum[] =
				{
					"COMPTALL",
					"COMP2",
					"SPACEW3",
					"COMPUTE1",
					"PLANET1",
					// CC4 Tex
					"COMPUTE4",
					"COMPUTE7",
					"COMPUTE8",
					"COMPUTE9"
				};

				for (int i = 0; i < WallTechhum.Size(); i++)
				{
					if (l.sidedef[ii] && l.sidedef[ii].GetTexture(Side.top) == TexMan.CheckForTexture(WallTechhum[i], TexMan.Type_Any))
					Actor.Spawn("FancyWallTechhum", (spawnCoords,(spamc - 32)));
					if (l.sidedef[ii] && l.sidedef[ii].GetTexture(Side.mid) == TexMan.CheckForTexture(WallTechhum[i], TexMan.Type_Any))
					Actor.Spawn("FancyWallTechhum", (spawnCoords,(spamc - (spamf * 0.5))));
					if (l.sidedef[ii] && l.sidedef[ii].GetTexture(Side.bottom) == TexMan.CheckForTexture(WallTechhum[i], TexMan.Type_Any))
					Actor.Spawn("FancyWallTechhum", (spawnCoords,spamf));
				}

				// Wall-Based Lighting
				string WallLights[] =
				{
					"LITE3",
					"LITE5",
					"LITEBLU1",
					"LITEBLU4",
					"BRICKLIT",
					"BSTONE3",
					"LITE2",
					"LITE96",
					"LITEMET",
					"LITERED",
					"LITESTON",
					"LITE4",
					"LITEGRN1",
					"LITERED1",
					"LITERED2",
					"LITEYEL1",
					"LITEYEL2",
					"LITEYEL3"
				};

				for (int i = 0; i < WallLights.Size(); i++)
				{
					if (l.sidedef[ii] && l.sidedef[ii].GetTexture(Side.top) == TexMan.CheckForTexture(WallLights[i], TexMan.Type_Any))
					Actor.Spawn("FancyWallLights", (spawnCoords,(spamc - 32)));
					if (l.sidedef[ii] && l.sidedef[ii].GetTexture(Side.mid) == TexMan.CheckForTexture(WallLights[i], TexMan.Type_Any))
					Actor.Spawn("FancyWallLights", (spawnCoords,(spamc - (spamf * 0.5))));
					if (l.sidedef[ii] && l.sidedef[ii].GetTexture(Side.bottom) == TexMan.CheckForTexture(WallLights[i], TexMan.Type_Any))
					Actor.Spawn("FancyWallLights", (spawnCoords,spamf));
				}

				// CCTEX4/OBSIDIAN Static Monitor
				string WallStatic[] =
				{
					"COMPFUZ1",
					"COMPFUZ2",
					"COMPFUZ3",
					"COMPFUZ4",
					// Console/OBSIDIAN
					"TVSNOW01",
					"TVSNOW02",
					"TVSNOW03",
					"NOISE1",
					"NOISE2",
					"NOISE3",
					"NOISE4",
					"NOISE2A",
					"NOISE2B",
					"NOISE2C",
					"NOISE2D",
					"NOISE3A",
					"NOISE3B",
					"NOISE3C",
					"NOISE3D",
					// OBSIDIAN, may move to own sound later
					"DECMP04A",
					"DECMP04B",
					"DECMP04C",
					"DECMP04D",
					"DECMP04E",
					"DECMP04F",
					"DECMP04G",
					"DECMP04H"
				};

				for (int i = 0; i < WallStatic.Size(); i++)
				{
					if (l.sidedef[ii] && l.sidedef[ii].GetTexture(Side.top) == TexMan.CheckForTexture(WallStatic[i], TexMan.Type_Any))
					Actor.Spawn("FancyWallStatic", (spawnCoords,(spamc - 32)));
					if (l.sidedef[ii] && l.sidedef[ii].GetTexture(Side.mid) == TexMan.CheckForTexture(WallStatic[i], TexMan.Type_Any))
					Actor.Spawn("FancyWallStatic", (spawnCoords,(spamc - (spamf * 0.5))));
					if (l.sidedef[ii] && l.sidedef[ii].GetTexture(Side.bottom) == TexMan.CheckForTexture(WallStatic[i], TexMan.Type_Any))
					Actor.Spawn("FancyWallStatic", (spawnCoords,spamf));
				}
				
				// Fans from Obsidian
				string WallFan[] =
				{
					"DFAN1",
					"DFAN2",
					"DFAN3",
					"DFAN4"
				};

				for (int i = 0; i < WallFan.Size(); i++)
				{
					if (l.sidedef[ii] && l.sidedef[ii].GetTexture(Side.top) == TexMan.CheckForTexture(WallFan[i], TexMan.Type_Any))
					Actor.Spawn("FancyWallFan", (spawnCoords,(spamc - 32)));
					if (l.sidedef[ii] && l.sidedef[ii].GetTexture(Side.mid) == TexMan.CheckForTexture(WallFan[i], TexMan.Type_Any))
					Actor.Spawn("FancyWallFan", (spawnCoords,(spamc - (spamf * 0.5))));
					if (l.sidedef[ii] && l.sidedef[ii].GetTexture(Side.bottom) == TexMan.CheckForTexture(WallFan[i], TexMan.Type_Any))
					Actor.Spawn("FancyWallFan", (spawnCoords,spamf));
				}

				// One-Offs
				// Creepy Face Texture
				if (l.sidedef[ii] && l.sidedef[ii].GetTexture(Side.top) == TexMan.CheckForTexture("SP_FACE1", TexMan.Type_Any))
				Actor.Spawn("FancyWallFaces", (spawnCoords,(spamc - 32)));
				if (l.sidedef[ii] && l.sidedef[ii].GetTexture(Side.mid) == TexMan.CheckForTexture("SP_FACE1", TexMan.Type_Any))
				Actor.Spawn("FancyWallFaces", (spawnCoords,(spamc - (spamf * 0.5))));
				if (l.sidedef[ii] && l.sidedef[ii].GetTexture(Side.bottom) == TexMan.CheckForTexture("SP_FACE1", TexMan.Type_Any))
				Actor.Spawn("FancyWallFaces", (spawnCoords,spamf));
			}
		}
	}
	
	// Apply per-texture SoundSequences to moving actors. This is an experimental fucking mess.
	void ChangeSoundSequences()
	{
		/*
		string FloorWater[] =
		{
			"FWATER1",
			"FWATER2",
			"FWATER3",
			"FWATER4",
			// OBSIDIAN Purple water - maybe move later
			"PURW1",
			"PURW2"
		};
		
		for (int i = 0; i < level.Sectors.Size(); i++)
		{
			for (int j = 0; j < FloorWater.Size(); j++)
			{
				if (level.Sectors[i].getTexture(Sector.floor) == TexMan.CheckForTexture(FloorWater[j], TexMan.Type_Any))
				{
					level.Sectors[i].seqname = "Platform";
				}
			}
		}
		
		*/
		
		string DoorWood[] =
		{
			"BIGDOOR5",
			"BIGDOOR6",
			"BIGDOOR7"
		};
		
		string PlatMetal[] =
		{
			"METAL2",
			"METAL3",
			"METAL4",
			"METAL5",
			"METAL6",
			"METAL7"
		};
		
		for (int k = 0; k < level.Lines.Size(); k++)
		{
			Line l = level.Lines[k];
			
			// Wooden Doors
			for (int j = 0; j < DoorWood.Size(); j++)
			{
				if (l.flags & line.ML_TWOSIDED && l.sidedef[0] && l.sidedef[0].GetTexture(Side.top) == TexMan.CheckForTexture(DoorWood[j], TexMan.Type_Any))
				{
					l.BackSector.seqname = "FancyDoorWood";
				}
			}
			
			// Metal Plats
			for (int j = 0; j < PlatMetal.Size(); j++)
			{
				if (l.flags & line.ML_TWOSIDED && l.sidedef[0] && l.sidedef[0].GetTexture(Side.top) == TexMan.CheckForTexture(PlatMetal[j], TexMan.Type_Any))
				{
					l.BackSector.seqname = "FancyPlatMetal";
				}
				
				if (l.flags & line.ML_TWOSIDED && l.sidedef[0] && l.sidedef[0].GetTexture(Side.bottom) == TexMan.CheckForTexture(PlatMetal[j], TexMan.Type_Any))
				{
					l.BackSector.seqname = "FancyPlatMetal";
				}
			}
		}
	}
}

class FancyEnvActorSky : Actor
{
	Default
	{
		-SOLID
		+DONTSPLASH
		+NOTELEPORT
		+NOCLIP
		+NOBLOCKMAP
		RenderStyle "None";
		radius 1;
		height 1;
	}

	States
	{
	Spawn:
		TNT1 A 0;
		TNT1 A 0
		{
			// back to the dumb ways
			if (ceilingpic == TexMan.CheckForTexture("F_SKY1", TexMan.Type_Any))
			{
				A_SpawnItem("FancySectorSky");
			}
		}
		Stop;
	}
}

class FancyEnvActorCeiling : Actor
{
	Default
	{
		-SOLID
		+DONTSPLASH
		+NOTELEPORT
		+NOCLIP
		+NOBLOCKMAP
		RenderStyle "None";
		radius 1;
		height 1;
	}

	States
	{
	Spawn:
		TNT1 A 0;
		TNT1 A 0
		{
			// Generic Ceiling Lights
			string CeilingLights[] =
			{
				"CEIL1_2",
				"CEIL1_3",
				"CEIL3_6",
				"FLAT2",
				"FLAT17",
				"GRNLITE1",
				"TLITE6_1",
				"TLITE6_4",
				"TLITE6_5",
				"TLITE6_6"
			};
			
			for (int i = 0; i < 10; i++)
			{
				if (ceilingpic == TexMan.CheckForTexture(CeilingLights[i], TexMan.Type_Any))
					A_SpawnItem("FancySectorCeilingLite");
			}
		}
		Stop;
	}
}